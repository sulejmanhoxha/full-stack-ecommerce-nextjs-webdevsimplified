// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// you can only have one datasource block in your schema
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String                  @id @default(uuid())
  email                 String                  @unique
  emailVerified         Boolean                 @default(false)
  password              String
  role                  String                  @default("user")
  emailVerificationCode EmailVerificationCode[]
  sessions              Session[]
  orders                Order[]
}

model EmailVerificationCode {
  id        String   @id @default(uuid())
  code      String
  email     String
  expiresAt DateTime
  user      User     @relation(fields: [userId], onDelete: Cascade, references: [id])
  userId    String   @unique
}

model Session {
  id        String   @id
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  userId    String
}

model Product {
  id                     String                 @id @default(uuid())
  name                   String
  priceInCents           Int
  filePath               String
  imagePath              String
  description            String
  isAvailableForPurchase Boolean                @default(true)
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  order                  Order[]
  downloadVerification   DownloadVerification[]
  discountCodes          DiscountCode[]
}

model Order {
  id               String   @id @default(uuid())
  pricePaidInCents Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  userId         String
  productId      String
  user           User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  product        Product       @relation(fields: [productId], references: [id], onDelete: Restrict)
  discountCodeId String?
  discountCode   DiscountCode? @relation(fields: [discountCodeId], references: [id], onDelete: Restrict)
}

model DownloadVerification {
  id        String   @id @default(uuid())
  expiresAt DateTime
  createdAt DateTime @default(now())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model DiscountCode {
  id             String           @id @default(uuid())
  code           String           @unique
  discountAmount Int
  discountType   DiscountCodeType
  uses           Int              @default(0)
  isActive       Boolean          @default(true)
  allProducts    Boolean          @default(false)
  createdAt      DateTime         @default(now())
  limit          Int?
  expiresAt      DateTime?

  products Product[]
  orders   Order[]
}

enum DiscountCodeType {
  PERCENTAGE
  FIXED
}
